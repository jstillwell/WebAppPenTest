using Dapper;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace WebAppPenTest.Domain {
    public class Header : DapperWrapper {
        private static readonly string Header_Get = "SELECT Id, PacketId, [Key], Value FROM Headers WHERE Id = @Id";
        private static readonly string Header_GetList = "SELECT Id, PacketId, [Key], Value FROM Headers WHERE PacketId = @PacketId";
        private static readonly string Header_Insert = "INSERT INTO [Headers] ([PacketId] ,[Key] ,[Value]) VALUES (@PacketId, @Key, @Value); SELECT last_insert_rowid();";

        public Common.Models.Header Get(long id) {
            return base.DbConnection.Query<Common.Models.Header>(Header_Get,
             new { Id = id },
             commandType: CommandType.Text).SingleOrDefault();
        }
        public List<Common.Models.Header> GetList(long packetId) {
            return base.DbConnection.Query<Common.Models.Header>(Header_GetList,
                new { PacketId = packetId },
             commandType: CommandType.Text).ToList();
        }
        public List<Common.Models.Header> GetAll() {
            return base.DbConnection.Query<Common.Models.Header>(Header_GetList,
             commandType: CommandType.Text).ToList();
        }
        public void Insert(Common.Models.Header header) {
            var id = base.DbConnection.Query<int>(Header_Insert,
              new { PacketId = header.PacketId, Key = header.Key, Value = header.Value },
              commandType: CommandType.Text).SingleOrDefault();
            //use ref to set id on model so we can use it later
            header.Id = id;
        }
        public void InsertList(List<Common.Models.Header> headers, int packetId) {
            if (headers != null && headers.Count != 0) {
                foreach (var header in headers) {
                    header.PacketId = packetId;
                    Insert(header);
                } 
            }
        }
        public Common.Models.Header ConvertHeader(Titanium.Web.Proxy.Models.HttpHeader header) {
            return new Common.Models.Header {
                 Key = header.Name,
                 Value = header.Value
            };
        }
    }
}
